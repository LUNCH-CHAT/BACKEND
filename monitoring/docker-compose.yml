version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: ${PROJECT_NAME}_prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=500MB'
      - '--query.max-concurrency=4'
      - '--query.max-samples=10000'
      - '--web.max-connections=128'
      - '--web.enable-lifecycle'
      - '--web.route-prefix=/'
      - '--web.external-url=http://localhost:${PROMETHEUS_PORT}'
    mem_limit: 300m
    memswap_limit: 300m
    networks:
      - monitoring
    user: "nobody"
    read_only: true
    tmpfs:
      - /tmp

  grafana:
    image: grafana/grafana:latest
    container_name: ${PROJECT_NAME}_grafana
    restart: unless-stopped
    ports:
      - "${GRAFANA_PORT}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:${GRAFANA_PORT}
      - GF_SECURITY_COOKIE_SECURE=false
      - GF_SECURITY_COOKIE_SAMESITE=lax
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_ANALYTICS_CHECK_FOR_UPDATES=false
      - GF_LOG_LEVEL=error
      - GF_DATABASE_MAX_OPEN_CONN=5
      - GF_DATABASE_MAX_IDLE_CONN=2
      - GF_ALERTING_ENABLED=false
      - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_RENDERING_SERVER_URL=""
      - GF_RENDERING_CALLBACK_URL=""
    mem_limit: 150m
    memswap_limit: 150m
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    user: "472:472"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: ${PROJECT_NAME}_node_exporter
    restart: unless-stopped
    ports:
      - "${NODE_EXPORTER_PORT}:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--web.disable-exporter-metrics'
      - '--collector.disable-defaults'
      - '--collector.cpu'
      - '--collector.meminfo'
      - '--collector.diskstats'
      - '--collector.filesystem'
      - '--collector.loadavg'
      - '--collector.netdev'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    user: "nobody"
    read_only: true
    mem_limit: 30m
    memswap_limit: 30m

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: ${PROJECT_NAME}_redis_exporter
    restart: unless-stopped
    ports:
      - "${REDIS_EXPORTER_PORT}:9121"
    environment:
      - REDIS_ADDR=redis://host.docker.internal:6379
      - REDIS_EXPORTER_LOG_FORMAT=json
    networks:
      - monitoring
    user: "nobody"
    read_only: true
    mem_limit: 20m
    memswap_limit: 20m

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
