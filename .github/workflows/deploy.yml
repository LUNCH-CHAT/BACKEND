name: LunchChat CI/CD Pipeline with AWX

on:
  push:
    branches:
      - main
      - 'dev/**'
      - 'deploy/**' # 테스트를 위해 deploy 브랜치 패턴 추가

env:
  DOCKER_IMAGE_NAME: lunchchat-backend
  DOCKER_REGISTRY: xoo1228

jobs:
  build-and-push:
    runs-on: ubuntu-latest-4-cores
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev/') || startsWith(github.ref, 'refs/heads/deploy/')
    outputs:
      image-tag: ${{ steps.set-tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build application
        run: ./gradlew build -x test --no-daemon --parallel --build-cache

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set image tag
        id: set-tag
        run: |
          SAFE_REF_NAME=$(echo "${{ github.ref_name }}" | tr '/\' '-' )
          echo "IMAGE_TAG=${SAFE_REF_NAME}-${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.set-tag.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy-monitoring:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger AWX Monitoring Deployment
        uses: clowdhaus/awx-action@v1
        with:
          awx_token: ${{ secrets.AWX_TOKEN }}
          awx_server: ${{ secrets.AWX_SERVER_URL }}
          job_template_name: "Deploy Monitoring Stack"

  deploy-app-server1:
    needs: [ build-and-push, deploy-monitoring ]
    runs-on: ubuntu-latest
    steps:
      - name: Trigger AWX App Deployment on server1
        uses: clowdhaus/awx-action@v1
        with:
          awx_token: ${{ secrets.AWX_TOKEN }}
          awx_server: ${{ secrets.AWX_SERVER_URL }}
          job_template_name: ${{ github.ref_name == 'main' && 'Deploy LunchChat App' || 'Deploy LunchChat App - Dev' }}
          extra_vars: |
            image_tag: ${{ needs.build-and-push.outputs.image-tag }}
            docker_registry: ${{ env.DOCKER_REGISTRY }}
            docker_image_name: ${{ env.DOCKER_IMAGE_NAME }}
          limit: server1

  deploy-app-server2:
    needs: deploy-app-server1
    runs-on: ubuntu-latest
    steps:
      - name: Trigger AWX App Deployment on server2
        uses: clowdhaus/awx-action@v1
        with:
          awx_token: ${{ secrets.AWX_TOKEN }}
          awx_server: ${{ secrets.AWX_SERVER_URL }}
          job_template_name: ${{ github.ref_name == 'main' && 'Deploy LunchChat App' || 'Deploy LunchChat App - Dev' }}
          extra_vars: |
            image_tag: ${{ needs.build-and-push.outputs.image-tag }}
            docker_registry: ${{ env.DOCKER_REGISTRY }}
            docker_image_name: ${{ env.DOCKER_IMAGE_NAME }}
          limit: server2