name: LunchChat CI/CD Pipeline with AWX

on:
  push:
    branches:
      - main
      - 'dev/**'
      - 'deploy/**'

env:
  DOCKER_IMAGE_NAME: lunchchat-backend
  DOCKER_REGISTRY: xoo1228

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev/') || startsWith(github.ref, 'refs/heads/deploy/')
    outputs:
      image-tag: ${{ steps.set-tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle for optimal caching
        uses: gradle/actions/setup-gradle@v3
      - name: Build application with Gradle
        run: ./gradlew build -x test
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set image tag
        id: set-tag
        run: |
          SAFE_REF_NAME=$(echo "${{ github.ref_name }}" | tr '/\' '-' )
          echo "IMAGE_TAG=${SAFE_REF_NAME}-${{ github.sha }}" >> $GITHUB_OUTPUT
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.set-tag.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  deploy-monitoring:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install and configure AWX CLI
        run: |
          pip install ansible-awx
          export TOWER_HOST=${{ secrets.AWX_SERVER_URL }}
          export TOWER_TOKEN=${{ secrets.AWX_TOKEN }}
          awx config --tower_verify_ssl false
          awx job_templates launch "Deploy Monitoring Stack"

  deploy-app-server1:
    needs: [ build-and-push, deploy-monitoring ]
    runs-on: ubuntu-latest
    steps:
      - name: Install and configure AWX CLI
        run: |
          pip install ansible-awx
          export TOWER_HOST=${{ secrets.AWX_SERVER_URL }}
          export TOWER_TOKEN=${{ secrets.AWX_TOKEN }}
          awx config --tower_verify_ssl false
          awx job_templates launch "${{ github.ref_name == 'main' && 'Deploy LunchChat App' || 'Deploy LunchChat App - Dev' }}" \
          --extra-vars "image_tag=${{ needs.build-and-push.outputs.image-tag }} docker_registry=${{ env.DOCKER_REGISTRY }} docker_image_name=${{ env.DOCKER_IMAGE_NAME }}" \
          --limit "server1"

  deploy-app-server2:
    needs: deploy-app-server1
    runs-on: ubuntu-latest
    steps:
      - name: Install and configure AWX CLI
        run: |
          pip install ansible-awx
          export TOWER_HOST=${{ secrets.AWX_SERVER_URL }}
          export TOWER_TOKEN=${{ secrets.AWX_TOKEN }}
          awx config --tower_verify_ssl false
          awx job_templates launch "${{ github.ref_name == 'main' && 'Deploy LunchChat App' || 'Deploy LunchChat App - Dev' }}" \
          --extra-vars "image_tag=${{ needs.build-and-push.outputs.image-tag }} docker_registry=${{ env.DOCKER_REGISTRY }} docker_image_name=${{ env.DOCKER_IMAGE_NAME }}" \
          --limit "server2"